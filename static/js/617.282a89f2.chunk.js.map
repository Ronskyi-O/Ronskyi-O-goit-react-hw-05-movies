{"version":3,"file":"static/js/617.282a89f2.chunk.js","mappings":"kOAGaA,EAAe,WACxB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BC,EAAAA,EAAAA,MAAnBC,GAAT,eAaA,OACI,kBAAMC,SAPW,SAAAC,GACjBA,EAAEC,iBACFH,EAAgB,CAAEI,MAAOP,IACzBC,EAAe,GAClB,EAGG,WACI,kBACIO,KAAK,OACLC,KAAK,iBACLC,YAAY,gBACZC,MAAOX,EACPY,SAjBc,SAAAP,GACtBJ,EAAeI,EAAEQ,OAAOF,MAAMG,cACjC,KAiBO,mBAAQN,KAAK,SAAb,sBAGX,E,oCC3BYO,EAAYC,EAAAA,GAAAA,IAAH,wEAKTC,EAAaD,EAAAA,GAAAA,GAAH,iJASVE,EAAQF,EAAAA,GAAAA,GAAH,8CAILG,GAAUH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,8KCiBpB,EA9ByB,WAAO,IAAD,EAC3B,GAA4BjB,EAAAA,EAAAA,UAAS,IAArC,eAAOsB,EAAP,KAAeC,EAAf,KACA,GAAuBpB,EAAAA,EAAAA,MACjBK,EAAK,WADX,eAC2BgB,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,MAUjB,OARAC,EAAAA,EAAAA,YAAU,WACQ,KAAVnB,IACAoB,EAAAA,EAAAA,IAAgBpB,GAAOqB,KAAKN,EAGnC,GAAE,CAACf,KAIA,4BACI,SAACT,EAAD,KACA,SAACiB,EAAD,WACI,SAACE,EAAD,UACKI,EAAOQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACR,SAACb,EAAD,WACI,SAACC,EAAD,CAASa,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMV,GAA7C,SAA0DO,KADlDD,EADJ,UAS/B,C","sources":["components/Movies/MoviesSearc/MoviesSearc.jsx","Pages/MoviesSearchPage/MoviesSearchPage.styled.jsx","Pages/MoviesSearchPage/MoviesSearchPage.jsx"],"sourcesContent":["import { useSearchParams } from \"react-router-dom\"\nimport { useState } from \"react\"\n\nexport const MoviesSearch = () => {\n    const [searchQuery, setSearchQuery] = useState('');\n    const [, setSearchParams] = useSearchParams()\n\n\n    const handleQuerySearch = e => {\n        setSearchQuery(e.target.value.toLowerCase());\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        setSearchParams({ query: searchQuery });\n        setSearchQuery('');\n    };\n\n    return (\n        <form onSubmit={handleSubmit} >\n            <input\n                type=\"text\"\n                name=\"searchingMovie\"\n                placeholder=\"Search Movies\"\n                value={searchQuery}\n                onChange={handleQuerySearch}\n            />\n            <button type=\"submit\" >Search</button>\n        </form>\n    )\n}","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nexport const Container = styled.div`\n    margin-top: 30px;\n    padding-left: 60px;\n`\n\nexport const MoviesList = styled.ul`\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    margin: 0;\n    padding: 0;\n    gap: 15px;\n`\n\nexport const Movie = styled.li`\n    font-size: 20px;\n`\n\nexport const NavItem = styled(Link)`\n    text-decoration: none;\n    color: black;\n    height: 100%;\n    cursor: pointer;\n\n    :hover,\n    :focus {\n        color:  #725757;\n    }\n`","import { MoviesSearch } from \"components/Movies/MoviesSearc/MoviesSearc\"\nimport { useState, useEffect } from \"react\"\nimport { useLocation, useSearchParams } from \"react-router-dom\"\nimport { getMoviesByName } from \"../../api/moviesApi\"\n\nimport { Container, MoviesList, Movie, NavItem } from \"./MoviesSearchPage.styled\"\n\n\nconst MoviesSearchPage = () => {\n    const [movies, setMovies] = useState([])\n    const [searchParams] = useSearchParams()\n    const query = searchParams.get(\"query\") ?? \"\"\n    const location = useLocation()\n\n    useEffect(() => {\n        if (query !== \"\") {\n            getMoviesByName(query).then(setMovies)\n        }\n\n    }, [query])\n\n\n    return (\n        <div>\n            <MoviesSearch />\n            <Container>\n                <MoviesList>\n                    {movies.map(({ id, title }) => (\n                        <Movie key={id}>\n                            <NavItem to={`/movies/${id}`} state={{ from: location }}>{title}</NavItem>\n                        </Movie>\n                    ))}\n                </MoviesList>\n            </Container>\n        </div>\n    )\n}\n\nexport default MoviesSearchPage"],"names":["MoviesSearch","useState","searchQuery","setSearchQuery","useSearchParams","setSearchParams","onSubmit","e","preventDefault","query","type","name","placeholder","value","onChange","target","toLowerCase","Container","styled","MoviesList","Movie","NavItem","Link","movies","setMovies","get","location","useLocation","useEffect","getMoviesByName","then","map","id","title","to","state","from"],"sourceRoot":""}